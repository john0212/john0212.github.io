[{"categories":["個人筆記"],"contents":"3-2 章 如果要在 spring boot 中使用 spring AOP(Aspect-Oriented Programming,切面導向程式設計) 的話，就要使用到 @Aspect 註解\nAOP 概念就是將所有方法都要執行的共同邏輯，去統一的寫在切面裡面，並且讓這個切面去橫貫所有的方法，替所有的方法去執行這個共同邏輯\n@Aspect 用法:加在 class 上 (需和 @Component 一起使用，也就是這個 class 必須要先成為一個 bean，他才能成為一個切面) 用途:宣告這個 class 是一個切面 @Before 用法:加在切面 class 的方法上 用途:再切入點的方法執行前執行 @After 用法:加在切面 class 的方法上 用途:再切入點的方法執行後執行 @Around 用法:加在切面 class 的方法上 用途:再切入點的方法執行前、後執行 除了上面幾個較常用的註解外，還有一些比較不常用的，像是\n@AfterThrowing : 再切入點的方法拋出異常後執行\n@AfterReturning : 再切入點的方法執行成功後執行\n常見的切入點表達式 Spring AOP 的發展 權限驗證 Spring Security 統一的 Exception 處理 @ControllerAdvice Log 記錄 ","permalink":"https://john0212.github.io/blog/ch3/","tags":["Java","Spring Boot"],"title":"Spring Boot AOP 重點"},{"categories":["個人筆記"],"contents":"2-2 章 @component 用法:只能加在 class 上 用途:將該 class 變成由 Spring 容器所管理的 object ，那這些 object 會被稱作為 bean(這個 bean 名字為 class name 的第一個字母轉小寫) 專有名詞 Ioc(Inversion of Control)控制反轉:會將 object 存放在 spring 容器裡面 DI(Dependency Injection)依賴注入:會讓我們去取得存放在 spring 容器裡面的那些 object bean:存放在 spring 容器裡的 object @Autowired:加在變數上，取得 spring 容器中的 bean 2-3 章 @Autowired 用法:通常加在 class 變數上 用途:根據變數的類型，去 spring 容器中尋找有沒有符合類型的 bean @Qualifier 用法:通常是加在 class 變數上，會跟@Autowired 一起使用 用途:指定要載入的 bean 的名字 2-4 章 Bean 的創建方式，這兩個是可以同時使用的 在 class 上加上@Component 註解 使用@Configuration+@Bean 註解 @Configuration 用法:只能加在class上 用途:spring 中的設定用註解，表示這個 class 是拿來設定 spring 用的 @Bean 用法:只能加在帶有 @Configuration class 的方法上 用途:在 spring 容器中創建一個 bean 2-5 章 spring 中初始化 bean 的方法，一次只要選一種使用就好 使用@PostConstruct(較常用)，有幾個細節要注意 方法一定要為 public 返回類型一定要是 void 方法名字可以隨意取 不能有參數 @PostConstruct public void initialize() { // 要做的事 } 實現 InitializingBean interface 的 afterPropertiesSet() 方法 // 要先實作 InitializingBean，之後去實作 afterPropertiesSet() method @Override public void afterPropertiesSet() throws Exception { // 要做的事 } 2-6 章 Bean 的生命週期重點 Bean 的生命週期 : 創建-\u0026gt;初始化-\u0026gt;可以被別人拿去使用 創建時若有依賴其他 Bean，則 Spring 會回過頭去 [創建+初始化] 那個被依賴的 Bean 不要寫出循環依賴的 code 2-7 章 Spring Boot 設定檔 - application.properties 用法:使用 properties 語法 (key=value) 用途:存放 Spring Boot 的設定值 @Value 用法:加在Bean或是設定 Spring 用的 class裡面的變數上 用途:讀取 Spring Boot 設定檔 (application.properties) 中指定的 Key 的值 使用@Value 有幾個重點要注意 可以加在帶有@Component 或@Configuration 上 格式必須為 ${key} 變數所使用的類型，必須要跟 Spring Boot 設定檔中那個 key 所對應的類型一樣才行 可以設定預設值。當找不到對應的 key 時，就會用此預設值。 ","permalink":"https://john0212.github.io/blog/ch2/","tags":["Java","Spring Boot"],"title":"Spring Boot IoC 重點"},{"categories":["個人筆記"],"contents":"內文(兩行中間要空一行才能在網頁也呈現空行的樣子)\nHello world\n我是 John\n一級標題 二級標題 Hello 在想要加粗體字的前後都加上兩個*就會變成粗體了\n在想要加粗體字的前後都加上一個*就會變成斜體了\n有序序列 第一 How are you 第二 無序序列 第一 Hi 3 引用 引用\n超連結 呈現的文字\n連去另一篇文章\n圖片 單行程式碼 我是阿柴，我喜歡學習hello\n多行程式碼 print(\u0026#34;Hello world\u0026#34;) print(\u0026#34;Hello John\u0026#34;) print(\u0026#34;Hello Mary\u0026#34;) print(\u0026#34;Hello Jack\u0026#34;) 表格 Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 插入影片 Hugo 操作 想要把自己的個人網站發布到 Github Pages 的話，要在 cmd 上輸入 hugo，這樣就會產生出一個 public 的資料夾\n再把這資料夾裡的東西複製到 C:\\Users\\XXX\\Documents\\GitHub\\ 你的 repo ，然後再上傳到 github 就行了\n之後就能在網址上輸入 你的 github 帳號.github.io\n如何看自己選的 Hugo 主題有沒有辦法使用評論功能 在 config.toml 底下去找有沒有叫 disqusShortname 的東西，如果有就代表可以使用\n","permalink":"https://john0212.github.io/blog/test/","tags":["Hugo"],"title":"MarkDown語法練習及Hugo操作"}]